name: Daily reminder push

on:
  schedule:
    - cron: "0 12 * * *"   # 台北 20:00（UTC+8）
    - cron: "0 14 * * *"   # 台北 22:00（UTC+8）
  workflow_dispatch: {}

jobs:
  push:
    runs-on: ubuntu-latest
    steps:
      # 1) 服務帳戶登入（不要 scopes，才不會出現黃字警告）
      - name: Auth to Google
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          create_credentials_file: true
          export_environment_variables: true

      # 2) 設定 gcloud 專案
      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.FIREBASE_PROJECT_ID }}

      # 3) jq：runner 有就用，沒有才裝（避免 20~30s 的 apt-get）
      - name: Ensure jq (fast path)
        shell: bash
        run: |
          if ! command -v jq >/dev/null 2>&1; then
            sudo apt-get update
            sudo apt-get install -y jq
          else
            jq --version
          fi

      # 4) 讀 Firestore（REST API）
      #    取 daily/<UID>/meta.pendingCount 與 meta.dayToken
      - name: Read pendingCount from Firestore (REST)
        id: read
        shell: bash
        env:
          PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          UID: ${{ secrets.FIREBASE_UID }}
        run: |
          set -euo pipefail

          DOC_URL="https://firestore.googleapis.com/v1/projects/${PROJECT_ID}/databases/(default)/documents/daily/${UID}"

          # 取 access token（走 ADC；auth@v2 已建立憑證）
          ACCESS_TOKEN="$(gcloud auth application-default print-access-token)"

          # 抓文件（可能 404）
          HTTP_STATUS=$(curl -sS -o doc.json -w "%{http_code}" \
            -H "Authorization: Bearer ${ACCESS_TOKEN}" \
            -H "Content-Type: application/json; charset=UTF-8" \
            "${DOC_URL}")

          if [ "$HTTP_STATUS" != "200" ]; then
            echo "Firestore GET status=${HTTP_STATUS}（大多是 404 表示文件尚未寫入過）"
            echo "pending=" >> "$GITHUB_OUTPUT"
            echo "dayToken=" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          # 解析 meta.pendingCount / meta.dayToken
          PENDING="$(jq -r '.fields.meta.mapValue.fields.pendingCount.integerValue // empty' doc.json)"
          DAYTOKEN="$(jq -r '.fields.meta.mapValue.fields.dayToken.stringValue // empty' doc.json)"

          echo "parsed pending='${PENDING}', dayToken='${DAYTOKEN}'"
          echo "pending=${PENDING}"  >> "$GITHUB_OUTPUT"
          echo "dayToken=${DAYTOKEN}" >> "$GITHUB_OUTPUT"

      # 5) 判斷要不要送
      - name: Decide to push?
        id: decide
        shell: bash
        env:
          PENDING: ${{ steps.read.outputs.pending }}
          DAYTOKEN: ${{ steps.read.outputs.dayToken }}
        run: |
          set -euo pipefail
          TODAY="$(TZ=Asia/Taipei date +%Y-%m-%d)"

          # 空值處理：只要其中一個是空，就視為不送
          if [ -z "${PENDING}" ] || [ -z "${DAYTOKEN}" ]; then
            echo "should_send=false" >> "$GITHUB_OUTPUT"
            echo "Decision: SKIP (missing pending/dayToken)"
            exit 0
          fi

          if [ "${PENDING}" -gt 0 ] && [ "${DAYTOKEN}" = "${TODAY}" ]; then
            echo "should_send=true" >> "$GITHUB_OUTPUT"
            echo "Decision: SEND (pending=${PENDING}, today=${TODAY})"
          else
            echo "should_send=false" >> "$GITHUB_OUTPUT"
            echo "Decision: SKIP (pending=${PENDING}, dayToken=${DAYTOKEN}, today=${TODAY})"
          fi

      # 6) 組 payload（只有 should_send=true 才會跑）
      - name: Build FCM payload
        if: steps.decide.outputs.should_send == 'true'
        shell: bash
        run: |
          cat > payload.json <<'JSON'
          {
            "message": {
              "token": "${{ secrets.FCM_TOKEN }}",
              "notification": {
                "title": "每日任務提醒",
                "body": "你還有未完成的每日任務喔！"
              },
              "webpush": {
                "headers": {
                  "Urgency": "high",
                  "TTL": "120"
                },
                "fcm_options": {
                  "link": "https://eyvind95.github.io/hello/apps/ledger/daily.html"
                },
                "notification": {
                  "icon":  "https://eyvind95.github.io/hello/apps/ledger/6.png?v=4",
                  "badge": "https://eyvind95.github.io/hello/apps/ledger/8.png?v=4",
                  "tag": "daily-reminder"
                }
              }
            }
          }
          JSON
          echo "Payload built:"
          cat payload.json

      # 7) 送 FCM（只有 should_send=true 才會跑）
      - name: Send FCM HTTP v1
        if: steps.decide.outputs.should_send == 'true'
        shell: bash
        env:
          PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
        run: |
          set -euo pipefail
          ACCESS_TOKEN="$(gcloud auth application-default print-access-token)"
          HTTP_STATUS=$(curl -sS -o response.json -w "%{http_code}" \
            -H "Authorization: Bearer ${ACCESS_TOKEN}" \
            -H "Content-Type: application/json; charset=UTF-8" \
            "https://fcm.googleapis.com/v1/projects/${PROJECT_ID}/messages:send" \
            -d @payload.json)

          echo "HTTP_STATUS=${HTTP_STATUS}"
          echo "RESPONSE:" && cat response.json
          if [ "${HTTP_STATUS}" != "200" ]; then
            echo "FCM send failed." >&2
            exit 1
          fi

      # 8) 不需要發送時，明確輸出原因
      - name: Skip push (no need)
        if: steps.decide.outputs.should_send != 'true'
        run: |
          echo "Skip push: pending='${{ steps.read.outputs.pending }}' dayToken='${{ steps.read.outputs.dayToken }}' today='$(TZ=Asia/Taipei date +%Y-%m-%d)'"
