name: Daily reminder push

on:
  schedule:
    - cron: "0 12 * * *"   # 台北 20:00（UTC+8）
    - cron: "0 14 * * *"   # 台北 22:00（UTC+8）
  workflow_dispatch: {}

jobs:
  push:
    runs-on: ubuntu-latest

    steps:
      - name: Auth to Google
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.FIREBASE_PROJECT_ID }}

      - name: Install jq (for JSON parsing)
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Get access token
        id: tok
        shell: bash
        run: |
          set -euo pipefail
          ACCESS_TOKEN="$(gcloud auth application-default print-access-token)"
          echo "len=${#ACCESS_TOKEN}"
          echo "token=${ACCESS_TOKEN}" >> $GITHUB_OUTPUT

      - name: Read pendingCount from Firestore
        id: read
        shell: bash
        env:
          PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          UID:        ${{ secrets.FIRESTORE_UID }}
          TOKEN:      ${{ steps.tok.outputs.token }}
        run: |
          set -euo pipefail
          DOC_URL="https://firestore.googleapis.com/v1/projects/${PROJECT_ID}/databases/(default)/documents/daily/${UID}"
          echo "GET ${DOC_URL}"
          HTTP_STATUS=$(curl -sS -o doc.json -w "%{http_code}" \
            -H "Authorization: Bearer ${TOKEN}" "${DOC_URL}")

          echo "FS_STATUS=${HTTP_STATUS}"
          cat doc.json || true

          # 預設值 0
          PENDING=0
          if [ "$HTTP_STATUS" = "200" ]; then
            # 嘗試從 meta.pendingCount 取數字（integer/string 都照顧）
            PENDING=$(jq -r '
              .fields.meta.mapValue.fields.pendingCount //
              empty
            | ( .integerValue // .stringValue // "0") | tonumber
            ' doc.json 2>/dev/null || echo 0)
          elif [ "$HTTP_STATUS" = "404" ]; then
            echo "Firestore document not found => 視為 0"
            PENDING=0
          else
            echo "Firestore read error (${HTTP_STATUS}) => 視為 0"
            PENDING=0
          fi

          echo "pending=${PENDING}"
          echo "pending=${PENDING}" >> $GITHUB_OUTPUT

      - name: Build FCM payload
        if: ${{ steps.read.outputs.pending != '0' }}
        run: |
          cat > payload.json <<'JSON'
          {
            "message": {
              "token": "${{ secrets.FCM_TOKEN }}",
              "notification": {
                "title": "每日任務提醒",
                "body": "你還有未完成的每日任務喔！"
              },
              "webpush": {
                "headers": {
                  "Urgency": "high",
                  "TTL": "300"
                },
                "fcm_options": {
                  "link": "https://eyvind95.github.io/hello/apps/ledger/daily.html"
                },
                "notification": {
                  "icon": "https://eyvind95.github.io/hello/apps/ledger/6.png",
                  "badge": "https://eyvind95.github.io/hello/apps/ledger/8.png",
                  "tag": "daily-reminder"
                }
              }
            }
          }
          JSON
          echo "Payload:"
          cat payload.json

      - name: Send FCM HTTP v1
        if: ${{ steps.read.outputs.pending != '0' }}
        shell: bash
        env:
          PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          TOKEN:      ${{ steps.tok.outputs.token }}
        run: |
          set -euo pipefail
          URL="https://fcm.googleapis.com/v1/projects/${PROJECT_ID}/messages:send"
          HTTP_STATUS=$(curl -sS -o response.json -w "%{http_code}" \
            -H "Authorization: Bearer ${TOKEN}" \
            -H "Content-Type: application/json; charset=UTF-8" \
            "${URL}" -d @payload.json)
          echo "HTTP_STATUS=${HTTP_STATUS}"
          echo "RESPONSE:" && cat response.json
          [ "$HTTP_STATUS" = "200" ] || (echo "FCM send failed" && exit 1)

      - name: Skip push (nothing pending)
        if: ${{ steps.read.outputs.pending == '0' }}
        run: echo "🎉 pendingCount=0，跳過通知。"
