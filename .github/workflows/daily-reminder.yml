name: Daily reminder push

on:
  schedule:
    - cron: "0 12 * * *"   # 台北 20:00
    - cron: "0 14 * * *"   # 台北 22:00
  workflow_dispatch: {}

jobs:
  push:
    runs-on: ubuntu-latest

    steps:
      - name: Auth to Google
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.FIREBASE_PROJECT_ID }}

      - name: Install jq (for JSON parsing)
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq

      - name: Get access token
        id: token
        shell: bash
        run: |
          set -euo pipefail
          echo "ACCESS_TOKEN=$(gcloud auth application-default print-access-token)" >> "$GITHUB_OUTPUT"

      - name: Read pendingCount from Firestore
        id: read_pending
        shell: bash
        run: |
          set -euo pipefail
          TODAY=$(TZ=Asia/Taipei date +%Y-%m-%d)
          DOC_PATH="projects/${{ secrets.FIREBASE_PROJECT_ID }}/databases/(default)/documents/daily/${{ secrets.FIREBASE_UID }}"

          # 讀文件（不存在不噴錯）
          DOC_JSON="$(gcloud firestore documents get "${DOC_PATH}" --format=json || true)"
          echo "Raw doc ↓↓↓"
          echo "${DOC_JSON}"

          # 兼容 integer/double/string 三種欄位；轉成純數字字串
          PENDING=$(
            echo "${DOC_JSON}" | jq -r '
              (
                try .fields.meta.mapValue.fields.pendingCount.integerValue catch empty //
                try .fields.meta.mapValue.fields.pendingCount.doubleValue  catch empty //
                try .fields.meta.mapValue.fields.pendingCount.stringValue  catch "0"
              ) | tostring
            '
          )

          # dayToken 可能是 string 或 timestamp，timestamp 取日期部分
          DAYTOKEN=$(
            echo "${DOC_JSON}" | jq -r '
              try .fields.meta.mapValue.fields.dayToken.stringValue    catch empty //
              try .fields.meta.mapValue.fields.dayToken.timestampValue catch empty
            '
          )
          if [[ "${DAYTOKEN}" == *T* ]]; then
            DAYTOKEN="${DAYTOKEN%%T*}"
          fi

          echo "Parsed -> pending='${PENDING}', dayToken='${DAYTOKEN}', today='${TODAY}'"
          echo "pending=${PENDING}"   >> "$GITHUB_OUTPUT"
          echo "dayToken=${DAYTOKEN}" >> "$GITHUB_OUTPUT"
          echo "today=${TODAY}"       >> "$GITHUB_OUTPUT"

      - name: Decide to push?
        id: decide
        shell: bash
        run: |
          set -euo pipefail
          P='${{ steps.read_pending.outputs.pending }}'
          D='${{ steps.read_pending.outputs.dayToken }}'
          T='${{ steps.read_pending.outputs.today }}'

          # 把 pending 轉成純整數；不是數字就當 0
          if [[ "${P}" =~ ^[0-9]+$ ]]; then
            PN="${P}"
          else
            PN=0
          fi

          # dayToken 空 → 視為今天，避免空值把推播擋掉
          REASON=""
          if [ -z "${D}" ]; then
            D="${T}"
            REASON="(dayToken empty → assume today)"
          fi

          echo "Decision inputs -> pending=${PN}, dayToken='${D}', today='${T}' ${REASON}"

          if [ "${PN}" -gt 0 ] && [ "${D}" = "${T}" ]; then
            echo "should_push=true" >> "$GITHUB_OUTPUT"
            echo "Decision: PUSH (pending>0 & dayToken=today)"
          else
            echo "should_push=false" >> "$GITHUB_OUTPUT"
            WHY="pending==0"
            if [ "${PN}" -gt 0 ] && [ "${D}" != "${T}" ]; then WHY="dayToken!=today (${D} != ${T})"; fi
            echo "Decision: SKIP (${WHY})"
          fi

      - name: Build FCM payload
        if: ${{ steps.decide.outputs.should_push == 'true' }}
        run: |
          cat > payload.json <<'JSON'
          {
            "message": {
              "token": "${{ secrets.FCM_TOKEN }}",
              "notification": {
                "title": "每日任務提醒",
                "body": "你還有未完成的每日任務喔！"
              },
              "webpush": {
                "headers": { "Urgency": "high", "TTL": "300" },
                "fcm_options": { "link": "https://eyvind95.github.io/hello/apps/ledger/daily.html" },
                "notification": {
                  "icon": "https://eyvind95.github.io/hello/apps/ledger/6.png",
                  "badge": "https://eyvind95.github.io/hello/apps/ledger/8.png",
                  "tag": "daily-reminder"
                }
              }
            }
          }
          JSON
          echo "Payload built:"
          cat payload.json

      - name: Send FCM HTTP v1
        if: ${{ steps.decide.outputs.should_push == 'true' }}
        shell: bash
        run: |
          set -euo pipefail
          ACCESS_TOKEN="${{ steps.token.outputs.ACCESS_TOKEN }}"
          HTTP_STATUS=$(curl -sS -o response.json -w "%{http_code}" \
            -H "Authorization: Bearer ${ACCESS_TOKEN}" \
            -H "Content-Type: application/json; charset=UTF-8" \
            "https://fcm.googleapis.com/v1/projects/${{ secrets.FIREBASE_PROJECT_ID }}/messages:send" \
            -d @payload.json)
          echo "HTTP_STATUS=${HTTP_STATUS}"
          echo "RESPONSE:"; cat response.json
          [ "$HTTP_STATUS" = "200" ] || { echo "FCM send failed"; exit 1; }

      - name: Skip push (no need)
        if: ${{ steps.decide.outputs.should_push != 'true' }}
        run: echo "Skip push：pending==0 或 dayToken != today（或為空）。"
        
