name: Daily reminder push

on:
  schedule:
    - cron: "0 12 * * *"   # 台北 20:00（UTC+8）
    - cron: "0 14 * * *"   # 台北 22:00（UTC+8）
  workflow_dispatch: {}

jobs:
  push:
    runs-on: ubuntu-latest
    steps:
      # 1) Google 身分驗證（用 service account JSON）
      - name: Auth to Google
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}

      # 2) 安裝 gcloud 並設定專案
      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.FIREBASE_PROJECT_ID }}

      # 3) 安裝 jq（解析 JSON 用）
      - name: Install jq (for JSON parsing)
        run: sudo apt-get update && sudo apt-get install -y jq

      # 4) 取得存取權杖（FCM HTTP v1 要用）
      - name: Get access token
        id: token
        run: echo "ACCESS_TOKEN=$(gcloud auth application-default print-access-token)" >> $GITHUB_OUTPUT

      # 5) 從 Firestore 讀取 meta.pendingCount / meta.dayToken
      - name: Read pendingCount from Firestore
        id: read_pending
        shell: bash
        env:
          PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          UID: ${{ secrets.FIREBASE_UID }}     # 你的使用者 doc id（如：pogm0xw...）
        run: |
          set -euo pipefail
          DOC_PATH="projects/${PROJECT_ID}/databases/(default)/documents/daily/${UID}"
          echo "DOC_PATH=${DOC_PATH}"

          # 允許沒有文件時不中斷（2>/dev/null 避免噪音）
          set +e
          DOC_JSON="$(gcloud firestore documents describe "${DOC_PATH}" --format=json 2>/dev/null)"
          rc=$?
          set -e

          echo "Raw doc (first 60 lines) ↓↓↓"
          echo "${DOC_JSON}" | head -n 60 || true

          PENDING="$(echo "${DOC_JSON}" | jq -r '.fields.meta.mapValue.fields.pendingCount.integerValue // empty')"
          DAYTOKEN="$(echo "${DOC_JSON}" | jq -r '.fields.meta.mapValue.fields.dayToken.stringValue // empty')"

          echo "parsed pending='${PENDING}', dayToken='${DAYTOKEN}'"
          echo "pending=${PENDING}"   >> $GITHUB_OUTPUT
          echo "dayToken=${DAYTOKEN}" >> $GITHUB_OUTPUT

      # 6) 判斷是否需要推播（今天且未清空才送）
      - name: Decide to push?
        id: decide
        shell: bash
        run: |
          set -euo pipefail
          P="${{ steps.read_pending.outputs.pending }}"
          DT="${{ steps.read_pending.outputs.dayToken }}"
          TODAY="$(TZ=Asia/Taipei date +%Y-%m-%d)"

          # 數值護欄：非數字或空字串一律視為 0
          PN=0
          if [[ "${P}" =~ ^[0-9]+$ ]]; then
            PN="${P}"
          fi

          echo "PN=${PN}, DT='${DT}', TODAY='${TODAY}'"

          if [[ "${DT}" == "${TODAY}" ]] && [[ ${PN} -gt 0 ]]; then
            echo "should_send=true"  >> $GITHUB_OUTPUT
            echo "Decision: PUSH (pending>0 & dayToken=today)"
          else
            echo "should_send=false" >> $GITHUB_OUTPUT
            echo "Decision: SKIP (no pending or not today)"
          fi

      # 7) 組 FCM payload（僅在需要時）
      - name: Build FCM payload
        if: steps.decide.outputs.should_send == 'true'
        run: |
          cat > payload.json <<'JSON'
          {
            "message": {
              "token": "${{ secrets.FCM_TOKEN }}",
              "notification": {
                "title": "每日任務提醒",
                "body": "你還有未完成的每日任務喔！"
              },
              "webpush": {
                "headers": {
                  "Urgency": "high",
                  "TTL": "300"
                },
                "fcm_options": {
                  "link": "https://eyvind95.github.io/hello/apps/ledger/daily.html"
                },
                "notification": {
                  "icon": "https://eyvind95.github.io/hello/apps/ledger/6.png",
                  "badge": "https://eyvind95.github.io/hello/apps/ledger/8.png",
                  "tag": "daily-reminder"
                }
              }
            }
          }
          JSON
          echo "Payload built:"
          cat payload.json

      # 8) 送 FCM HTTP v1（僅在需要時）
      - name: Send FCM HTTP v1
        if: steps.decide.outputs.should_send == 'true'
        shell: bash
        env:
          ACCESS_TOKEN: ${{ steps.token.outputs.ACCESS_TOKEN }}
          PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
        run: |
          set -euo pipefail
          HTTP_STATUS=$(curl -sS -o response.json -w "%{http_code}" \
            -H "Authorization: Bearer ${ACCESS_TOKEN}" \
            -H "Content-Type: application/json; charset=UTF-8" \
            "https://fcm.googleapis.com/v1/projects/${PROJECT_ID}/messages:send" \
            -d @payload.json)
          echo "HTTP_STATUS=${HTTP_STATUS}"
          echo "RESPONSE:"; cat response.json
          if [ "${HTTP_STATUS}" != "200" ]; then
            echo "Send failed."
            exit 1
          fi
          echo "Send OK."

      # 9) 跳過訊息時的說明
      - name: Skip push (no need)
        if: steps.decide.outputs.should_send != 'true'
        run: |
          echo "Skip push: pending='${{ steps.read_pending.outputs.pending }}' dayToken='${{ steps.read_pending.outputs.dayToken }}' today='$(TZ=Asia/Taipei date +%Y-%m-%d)'"
