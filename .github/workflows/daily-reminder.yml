name: Daily reminder push

on:
  schedule:
    - cron: "0 12 * * *"   # 台北 20:00（UTC+8）
    - cron: "0 14 * * *"   # 台北 22:00（UTC+8）
  workflow_dispatch: {}

jobs:
  push:
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
      UID:        ${{ secrets.FIREBASE_UID }}
    steps:
      # 1) 用服務帳戶登入
      - name: Auth to Google
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          scopes: https://www.googleapis.com/auth/datastore,https://www.googleapis.com/auth/firebase.messaging

      # 2) 裝 gcloud（取 access token 用）
      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2

      # 3) jq（JSON 解析）
      - name: Install jq (for JSON parsing)
        run: |
          sudo apt-get update && sudo apt-get install -y jq

      # 4) 拿 access token（給 REST 用）
      - name: Get access token
        id: token
        run: echo "ACCESS_TOKEN=$(gcloud auth application-default print-access-token)" >> $GITHUB_OUTPUT

      # 5) 用 REST 讀取 Firestore 的 daily/{UID}
      - name: Read pendingCount from Firestore (REST)
        id: read_pending
        env:
          ACCESS_TOKEN: ${{ steps.token.outputs.ACCESS_TOKEN }}
        run: |
          set -euo pipefail
          URL="https://firestore.googleapis.com/v1/projects/${PROJECT_ID}/databases/(default)/documents/daily/${UID}"

          HTTP_STATUS=$(curl -sS -o resp.json -w "%{http_code}" \
            -H "Authorization: Bearer ${ACCESS_TOKEN}" \
            -H "Accept: application/json" \
            "$URL")

          echo "HTTP_STATUS=${HTTP_STATUS}"
          echo "----- Raw doc (first 100 lines) -----"
          head -n 100 resp.json || true
          echo "-------------------------------------"

          if [ "$HTTP_STATUS" != "200" ]; then
            echo "Firestore read failed (status ${HTTP_STATUS})."
            # 給預設空值，後面判斷會自動 SKIP
            echo "pending="   >> "$GITHUB_OUTPUT"
            echo "dayToken="  >> "$GITHUB_OUTPUT"
            exit 0
          fi

          PENDING=$(jq -r '.fields.meta.mapValue.fields.pendingCount.integerValue // "0"' resp.json)
          DAYTOKEN=$(jq -r '.fields.meta.mapValue.fields.dayToken.stringValue // ""' resp.json)

          echo "parsed pending='${PENDING}', dayToken='${DAYTOKEN}'"
          echo "pending=${PENDING}"  >> "$GITHUB_OUTPUT"
          echo "dayToken=${DAYTOKEN}" >> "$GITHUB_OUTPUT"

      # 6) 決定要不要發（>0 且同一天才發）
      - name: Decide to push?
        id: decide
        run: |
          set -euo pipefail
          P="${{ steps.read_pending.outputs.pending }}"
          DT="${{ steps.read_pending.outputs.dayToken }}"
          TODAY="$(TZ=Asia/Taipei date +%Y-%m-%d)"

          # 避免空值造成數字比較錯誤
          if [ -z "$P" ]; then P=0; fi
          case "$P" in
            ''|*[!0-9]* ) P=0 ;;
          esac

          if [ "$P" -gt 0 ] && [ "$DT" = "$TODAY" ]; then
            SEND=1
            echo "Decision: SEND (pending=$P, dayToken=$DT, today=$TODAY)"
          else
            SEND=0
            echo "Decision: SKIP (pending=$P, dayToken='$DT', today='$TODAY')"
          fi
          echo "send=${SEND}" >> "$GITHUB_OUTPUT"

      # 7) Build payload（只有要發時才跑）
      - name: Build FCM payload
        if: steps.decide.outputs.send == '1'
        run: |
          cat > payload.json <<'JSON'
          {
            "message": {
              "token": "${{ secrets.FCM_TOKEN }}",
              "notification": {
                "title": "每日任務提醒",
                "body": "你還有未完成的每日任務喔！"
              },
              "webpush": {
                "headers": {
                  "Urgency": "high",
                  "TTL": "300"
                },
                "fcm_options": {
                  "link": "https://eyvind95.github.io/hello/apps/ledger/daily.html"
                },
                "notification": {
                  "icon":  "https://eyvind95.github.io/hello/apps/ledger/6.png",
                  "badge": "https://eyvind95.github.io/hello/apps/ledger/8.png",
                  "tag":   "daily-reminder"
                }
              }
            }
          }
          JSON
          echo "Payload built:"
          cat payload.json

      # 8) 送 FCM（只有要發時才跑）
      - name: Send FCM HTTP v1
        if: steps.decide.outputs.send == '1'
        env:
          ACCESS_TOKEN: ${{ steps.token.outputs.ACCESS_TOKEN }}
        run: |
          set -euo pipefail
          HTTP_STATUS=$(curl -sS -o response.json -w "%{http_code}" \
            -H "Authorization: Bearer ${ACCESS_TOKEN}" \
            -H "Content-Type: application/json; charset=UTF-8" \
            "https://fcm.googleapis.com/v1/projects/${{ secrets.FIREBASE_PROJECT_ID }}/messages:send" \
            -d @payload.json)

          echo "HTTP_STATUS=${HTTP_STATUS}"
          echo "RESPONSE:"; cat response.json
          test "$HTTP_STATUS" = "200"

      # 9) 若不需推播就記錄一下
      - name: Skip push (no need)
        if: steps.decide.outputs.send != '1'
        run: |
          echo "Skip push：pending='${{ steps.read_pending.outputs.pending }}' dayToken='${{ steps.read_pending.outputs.dayToken }}' today='$(TZ=Asia/Taipei date +%Y-%m-%d)'"
